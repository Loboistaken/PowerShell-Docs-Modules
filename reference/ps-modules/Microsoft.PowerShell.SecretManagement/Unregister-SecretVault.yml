### YamlMime:PowershellCmdlet
summary: |-
  Un-registers an extension vault from SecretManagement for the current user.
module: Microsoft.PowerShell.SecretManagement
notes: ""
inputs:
- name: <xref href="Microsoft.PowerShell.SecretManagement.SecretVaultInfo" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- Unregister-SecretVault [-Name] <String[]> [-WhatIf] [-Confirm] [<CommonParameters>]
- Unregister-SecretVault [-SecretVault] <SecretVaultInfo> [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> Get-SecretVault

    VaultName  ModuleName                        IsDefaultVault
    ---------  ----------                        --------------
    CredMan    Microsoft.PowerShell.CredManStore False
    LocalStore Microsoft.PowerShell.SecretStore  True

    PS C:\> Unregister-SecretVault LocalStore
    PS C:\> Get-SecretVault

    VaultName ModuleName                        IsDefaultVault
    --------- ----------                        --------------
    CredMan   Microsoft.PowerShell.CredManStore False

    PS C:\> Get-Secret -Name Secret5
    Get-Secret: The secret Secret5 was not found.

    PS C:\> Register-SecretVault -Name SecretStore -ModuleName Microsoft.PowerShell.SecretStore -DefaultVault
    PS C:\> Get-SecretVault

    VaultName   ModuleName                        IsDefaultVault
    ---------   ----------                        --------------
    CredMan     Microsoft.PowerShell.CredManStore False
    SecretStore Microsoft.PowerShell.SecretStore  True

    PS C:\> Get-Secret -Name Secret5
    System.Security.SecureString
  description: |-
    The first command lists the registered vaults for the current user. The second command un-registers
    the `LocalStore` vault. The third command verifies that the vault no longer appears in the registry.
    The fourth command attempts to retrieve `Secret5`, but it is not found since its vault was
    un-registered. The fifth command re-registers the vault under a different name and sets it as the
    user's default vault. The sixth command verifies that the vault has been re-registered as
    `SecretStore` and is the default vault. Finally, the last command retrieves `Secret5` from the
    re-registered vault.
  summary: ""
- title: Example 2
  code: |-
    PS C:\> Get-SecretVault | Unregister-SecretVault
    PS C:\> Get-SecretVault
  description: |-
    This example un-registers all extension vaults for the current user. The second command shows that
    no vaults are registered.

    This example un-registers all extension vaults for the current user. `Get-SecretVault` retrieves all
    registered vaults for the current user and sends the result through the pipeline to
    `Unregister-SecretVault`. `Get-SecretVault` shows that the secret no longer exists in the vault.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the vault to un-register. Enter a name or name pattern. Wildcard characters
    (`*`) are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SecretVaultInfo" data-throw-if-not-resolved="False" />
  name: SecretVault
  isRequired: true
  description: |+
    Specifies a **SecretVaultInfo** object representing the vault to un-register.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.SecretManagement.Unregister-SecretVault
name: Unregister-SecretVault
description: |-
  This cmdlet un-registers the specified extension vault. Once un-registered, the vault is no longer
  available to **SecretManagement** for the current user.
metadata:
  external help file: Microsoft.PowerShell.SecretManagement.dll-Help.xml
  Module Name: Microsoft.PowerShell.SecretManagement
  ms.date: 05/31/2022
  online version: https://learn.microsoft.com/powershell/module/microsoft.powershell.secretmanagement/unregister-secretvault?view=ps-modules&wt.mc_id=ps-gethelp
  schema: 2.0.0
