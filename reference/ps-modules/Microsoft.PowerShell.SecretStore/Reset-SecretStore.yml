### YamlMime:PowershellCmdlet
summary: |-
  Resets the SecretStore by deleting all secret data and configuring the store with default options.
module: Microsoft.PowerShell.SecretStore
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.PowerShell.SecretStore.SecureStoreConfig" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Reset-SecretStore [-Scope <SecureStoreScope>] [-Authentication <Authenticate>] [-Password <SecureString>]

   [-PasswordTimeout <Int32>] [-Interaction <Interaction>] [-PassThru] [-Force] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> Reset-SecretStore -PassThru
    WARNING: !!This operation will completely remove all SecretStore module secrets and reset
    configuration settings to default values!!

    Reset SecretStore
    Are you sure you want to erase all secrets in SecretStore and reset configuration settings to default?
    [Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "N"): Y
    Creating a new Microsoft.PowerShell.SecretStore vault. A password is required by the current store configuration.
    Enter password:
    ********
    Enter password again for verification:
    ********

          Scope Authentication PasswordTimeout Interaction
          ----- -------------- --------------- -----------
    CurrentUser       Password             900      Prompt
  description: |-
    This example resets the **SecretStore** for the current user. The cmdlet warns about the
    consequences of this action and prompts the user for confirmation before continuing. After
    confirmation, the cmdlet deletes all secrets and sets every configuration setting to its default
    value.
  summary: ""
parameters:
- type: <xref href="Authenticate" data-throw-if-not-resolved="False" />
  name: Authentication
  description: |+
    Specifies how to authenticate access to the **SecretStore**. The value must be `Password` or `None`.
    If specified as `None`, the cmdlet enables access to the **SecretStore** without a password. The
    default authentication is `Password`.

    > [!CAUTION]
    > Setting the **Authentication** to `None` is less secure than `Password`. Specifying `None` may be
    > useful for testing scenarios but should not be used with important secrets.

  defaultValue: Password
  position: Named
  aliases: ""
  parameterValueGroup: None, Password
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Indicates that the cmdlet should reset the **SecretStore** without prompting. By default, the cmdlet
    warns about the impact of resetting the **SecretStore** and prompts the user for confirmation.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Interaction" data-throw-if-not-resolved="False" />
  name: Interaction
  description: |+
    Specifies whether the **SecretStore** should prompt a user when they access it. If the value is
    `Prompt`, the user is prompted for their password in interactive sessions when required. If the
    value is `None`, the user is not prompted for a password. If the value is `None` and a password is
    required, the cmdlet requiring the password throws a
    **Microsoft.PowerShell.SecretStore.PasswordRequiredException** error.

  defaultValue: Prompt
  position: Named
  aliases: ""
  parameterValueGroup: None, Prompt
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Indicates that the cmdlet should return the **SecretStore** configuration after resetting it. By
    default, the cmdlet returns no output.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SecureString" data-throw-if-not-resolved="False" />
  name: Password
  description: |+
    Specifies the password the **SecretStore** should require for access. If **Authentication** is
    specified as `None`, the cmdlet returns an error. If **Authentication** is `Password` and this
    parameter is not specified, the cmdlet prompts the user to enter the password securely.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: PasswordTimeout
  description: |+
    Specifies how long the **SecretStore** remains unlocked after authenticating with a password. When
    the timeout value is reached, the current password value is invalidated for the session. Accessing
    the **SecretStore** after the timeout requires the password again.

  defaultValue: "900"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SecureStoreScope" data-throw-if-not-resolved="False" />
  name: Scope
  description: |+
    Specifies the context the **SecretStore** is configured for. Only `CurrentUser` is currently
    supported.

  defaultValue: CurrentUser
  position: Named
  aliases: ""
  parameterValueGroup: CurrentUser, AllUsers
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.SecretStore.Reset-SecretStore
name: Reset-SecretStore
description: |-
  This cmdlet completely resets the **SecretStore** by deleting all secret data it may contain, and
  resetting configuration options to their default values. It is intended to be used only if a
  required password is lost, or data files become corrupted so that **SecretStore** no longer
  functions and secret data cannot be accessed.

  The default configuration options can be overridden by specifying individual command configuration
  option parameters.
metadata:
  external help file: Microsoft.PowerShell.SecretStore.dll-Help.xml
  Module Name: Microsoft.PowerShell.SecretStore
  ms.date: 05/31/2022
  online version: https://learn.microsoft.com/powershell/module/microsoft.powershell.secretstore/reset-secretstore?view=ps-modules&wt.mc_id=ps-gethelp
  schema: 2.0.0
