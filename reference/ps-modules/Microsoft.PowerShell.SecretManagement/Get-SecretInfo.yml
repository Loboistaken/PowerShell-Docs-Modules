### YamlMime:PowershellCmdlet
summary: |-
  Finds and returns metadata information about secrets in registered vaults.
module: Microsoft.PowerShell.SecretManagement
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.PowerShell.SecretManagement.SecretInformation" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- Get-SecretInfo [[-Name] <String>] [[-Vault] <String>] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Get-SecretInfo -Name *

    Name                    Type VaultName
    ----                    ---- ---------
    Secret1               String LocalStore
    Secret2            ByteArray LocalStore
    Secret3         SecureString LocalStore
    Secret4         PSCredential LocalStore
    Secret5            Hashtable LocalStore
    Secret6            ByteArray CredMan
  description: |-
    This example specifies the **Name** parameter as a single wildcard (`*`) character to return
    metadata for all stored secrets. There are two registered vaults, `LocalStore` and `CredMan`. There
    are six **SecretInformation** objects returned from the two vaults.

    The output objects every valid type a secret can be:

    - **ByteArray**
    - **Hashtable**
    - **PSCredential**
    - **SecureString**
    - **String**
  summary: ""
- title: Example 2
  code: |-
    Get-SecretInfo -Name SecretWithMetadata | Select-Object -ExpandProperty Metadata

    Key         Value
    ---         -----
    Environment Development
    Expiration  5/1/2022 12:00:00 AM
    GroupNumber 7
  description: |-
    This example retrieves the `SecretWithMetadata` secret and displays its metadata. The entries in the
    hashtable show every valid type metadata values can be:

    - **String**
    - **DateTime**
    - **Int**
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    Specifies the name of a secret. This cmdlet only gets metadata for secrets that have the specified
    name. Enter a name or name pattern. Wildcard characters are permitted.

    If the **Name** parameter is not specified, this cmdlet returns the metadata for all stored secrets.

  defaultValue: None
  acceptWildcardCharacters: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Vault
  description: |+
    Specifies the name of a vault to search for secret metadata. Wildcard characters are not permitted.

    If the **Vault** parameter is not specified, this cmdlet searches for metadata in all registered
    vaults.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.PowerShell.SecretManagement.Get-SecretInfo
name: Get-SecretInfo
description: |-
  This cmdlet finds and returns information about secrets in registered vaults. By default, it returns
  information for every secret in all registered vaults.
metadata:
  external help file: Microsoft.PowerShell.SecretManagement.dll-Help.xml
  Module Name: Microsoft.PowerShell.SecretManagement
  ms.date: 05/31/2022
  online version: https://learn.microsoft.com/powershell/module/microsoft.powershell.secretmanagement/get-secretinfo?view=ps-modules&wt.mc_id=ps-gethelp
  schema: 2.0.0
